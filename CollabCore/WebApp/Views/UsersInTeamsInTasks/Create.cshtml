@model WebApp.ViewModels.UserInTeamInTaskViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>@Base.Resources.Common.Create</h1>

<h4>@App.Resources.Domain.UserInTeamInTask._UserInTeamInTask</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="UserInTeamInTask.Since" class="control-label"></label>
                <input asp-for="UserInTeamInTask.Since" class="form-control" />
                <span asp-validation-for="UserInTeamInTask.Since" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UserInTeamInTask.Until" class="control-label"></label>
                <input asp-for="UserInTeamInTask.Until" class="form-control" />
                <span asp-validation-for="UserInTeamInTask.Until" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UserInTeamInTask.TaskId" class="control-label">@Html.DisplayNameFor(model => model.UserInTeamInTask.Task)</label>
                <select asp-for="UserInTeamInTask.TaskId" class ="form-control" asp-items="Model.TaskSelectList"></select>
            </div>
            <div class="form-group">
                <label asp-for="UserInTeamInTask.UserInTeamId" class="control-label">@Html.DisplayNameFor(model => model.UserInTeamInTask.UserInTeam)</label>
                <select asp-for="UserInTeamInTask.UserInTeamId" class ="form-control" asp-items="Model.UsersInTeamSelectList"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="@Base.Resources.Common.Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">@Base.Resources.Common.BackToList</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
